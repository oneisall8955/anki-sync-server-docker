server {
    listen 80;
    listen [::]:80;
    server_name example.com; # remember edit
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name example.com; # remember edit

    ssl_certificate /xxx/ssl.d/cert.pem; # remember edit
    ssl_certificate_key /xxx/ssl.d/key.pem; # remember edit
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+ECDSA+AES128:EECDH+aRSA+AES128:RSA+AES128:EECDH+ECDSA+AES256:EECDH+aRSA+AES256:RSA+AES256:EECDH+ECDSA+3DES:EECDH+aRSA+3DES:RSA+3DES:!MD5;
    ssl_prefer_server_ciphers on;

    add_header Strict-Transport-Security max-age=15768000;

    ssl_stapling on;

    access_log  /xxx/logs/anki.access.log; # remember edit or delete
    error_log  /xxx/logs/anki.error.log;   # remember edit or delete

    charset utf-8;

    location / {
        proxy_http_version   1.0;
        proxy_pass http://127.0.0.1:27701;
        client_max_body_size 222M;
    }
}
